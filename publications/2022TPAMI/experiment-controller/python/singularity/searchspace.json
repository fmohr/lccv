[{"name": "data-pre-processor", "components": [{"class": "sklearn.preprocessing.MinMaxScaler", "params": "{\n  \"hyperparameters\": [],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.preprocessing.Normalizer", "params": "{\n  \"hyperparameters\": [],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.preprocessing.PowerTransformer", "params": "{\n  \"hyperparameters\": [],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.preprocessing.QuantileTransformer", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"n_quantiles\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 10,\n      \"upper\": 2000,\n      \"default\": 1000\n    },\n    {\n      \"name\": \"output_distribution\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"uniform\",\n        \"normal\"\n      ],\n      \"default\": \"uniform\",\n      \"probabilities\": null\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.preprocessing.RobustScaler", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"q_max\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.7,\n      \"upper\": 0.999,\n      \"default\": 0.75\n    },\n    {\n      \"name\": \"q_min\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.001,\n      \"upper\": 0.3,\n      \"default\": 0.25\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.preprocessing.StandardScaler", "params": "{\n  \"hyperparameters\": [],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.feature_selection._variance_threshold.VarianceThreshold", "params": "{\n  \"hyperparameters\": [],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}]}, {"name": "feature-pre-processor", "components": [{"class": "sklearn.decomposition._fastica.FastICA", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"algorithm\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"parallel\",\n        \"deflation\"\n      ],\n      \"default\": \"parallel\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"fun\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"logcosh\",\n        \"exp\",\n        \"cube\"\n      ],\n      \"default\": \"logcosh\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"whiten\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"False\",\n        \"True\"\n      ],\n      \"default\": \"False\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"n_components\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 10,\n      \"upper\": 2000,\n      \"default\": 100\n    }\n  ],\n  \"conditions\": [\n    {\n      \"child\": \"n_components\",\n      \"parent\": \"whiten\",\n      \"type\": \"EQ\",\n      \"value\": \"True\"\n    }\n  ],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.cluster._agglomerative.FeatureAgglomeration", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"affinity\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"euclidean\",\n        \"manhattan\",\n        \"cosine\"\n      ],\n      \"default\": \"euclidean\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"linkage\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"ward\",\n        \"complete\",\n        \"average\"\n      ],\n      \"default\": \"ward\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"n_clusters\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 2,\n      \"upper\": 400,\n      \"default\": 25\n    },\n    {\n      \"name\": \"pooling_func\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"mean\",\n        \"median\",\n        \"max\"\n      ],\n      \"default\": \"mean\",\n      \"probabilities\": null\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [\n    {\n      \"name\": \"affinity\",\n      \"type\": \"AND\",\n      \"clauses\": [\n        {\n          \"name\": \"affinity\",\n          \"type\": \"IN\",\n          \"values\": [\n            \"cosine\",\n            \"manhattan\"\n          ]\n        },\n        {\n          \"name\": \"linkage\",\n          \"type\": \"EQUALS\",\n          \"value\": \"ward\"\n        }\n      ]\n    }\n  ],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.decomposition._kernel_pca.KernelPCA", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"kernel\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"poly\",\n        \"rbf\",\n        \"sigmoid\",\n        \"cosine\"\n      ],\n      \"default\": \"rbf\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"n_components\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 10,\n      \"upper\": 2000,\n      \"default\": 100\n    },\n    {\n      \"name\": \"coef0\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": -1.0,\n      \"upper\": 1.0,\n      \"default\": 0.0\n    },\n    {\n      \"name\": \"degree\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 2,\n      \"upper\": 5,\n      \"default\": 3\n    },\n    {\n      \"name\": \"gamma\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 3.0517578125e-05,\n      \"upper\": 8.0,\n      \"default\": 0.01\n    }\n  ],\n  \"conditions\": [\n    {\n      \"child\": \"coef0\",\n      \"parent\": \"kernel\",\n      \"type\": \"IN\",\n      \"values\": [\n        \"poly\",\n        \"sigmoid\"\n      ]\n    },\n    {\n      \"child\": \"degree\",\n      \"parent\": \"kernel\",\n      \"type\": \"EQ\",\n      \"value\": \"poly\"\n    },\n    {\n      \"child\": \"gamma\",\n      \"parent\": \"kernel\",\n      \"type\": \"IN\",\n      \"values\": [\n        \"poly\",\n        \"rbf\"\n      ]\n    }\n  ],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.kernel_approximation.RBFSampler", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"gamma\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 3.0517578125e-05,\n      \"upper\": 8.0,\n      \"default\": 1.0\n    },\n    {\n      \"name\": \"n_components\",\n      \"type\": \"uniform_int\",\n      \"log\": true,\n      \"lower\": 50,\n      \"upper\": 10000,\n      \"default\": 100\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.kernel_approximation.Nystroem", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"kernel\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"poly\",\n        \"rbf\",\n        \"sigmoid\",\n        \"cosine\",\n        \"chi2\"\n      ],\n      \"default\": \"rbf\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"n_components\",\n      \"type\": \"uniform_int\",\n      \"log\": true,\n      \"lower\": 50,\n      \"upper\": 10000,\n      \"default\": 100\n    },\n    {\n      \"name\": \"coef0\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": -1.0,\n      \"upper\": 1.0,\n      \"default\": 0.0\n    },\n    {\n      \"name\": \"degree\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 2,\n      \"upper\": 5,\n      \"default\": 3\n    },\n    {\n      \"name\": \"gamma\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 3.0517578125e-05,\n      \"upper\": 8.0,\n      \"default\": 0.1\n    }\n  ],\n  \"conditions\": [\n    {\n      \"child\": \"coef0\",\n      \"parent\": \"kernel\",\n      \"type\": \"IN\",\n      \"values\": [\n        \"poly\",\n        \"sigmoid\"\n      ]\n    },\n    {\n      \"child\": \"degree\",\n      \"parent\": \"kernel\",\n      \"type\": \"EQ\",\n      \"value\": \"poly\"\n    },\n    {\n      \"child\": \"gamma\",\n      \"parent\": \"kernel\",\n      \"type\": \"IN\",\n      \"values\": [\n        \"poly\",\n        \"rbf\",\n        \"sigmoid\",\n        \"chi2\"\n      ]\n    }\n  ],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.decomposition._pca.PCA", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"keep_variance\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.5,\n      \"upper\": 0.9999,\n      \"default\": 0.9999\n    },\n    {\n      \"name\": \"whiten\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"False\",\n        \"True\"\n      ],\n      \"default\": \"False\",\n      \"probabilities\": null\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.preprocessing.PolynomialFeatures", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"degree\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 2,\n      \"upper\": 3,\n      \"default\": 2\n    },\n    {\n      \"name\": \"include_bias\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"True\",\n        \"False\"\n      ],\n      \"default\": \"True\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"interaction_only\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"False\",\n        \"True\"\n      ],\n      \"default\": \"False\",\n      \"probabilities\": null\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.feature_selection._univariate_selection.SelectPercentile", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"percentile\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 1.0,\n      \"upper\": 99.0,\n      \"default\": 50.0\n    },\n    {\n      \"name\": \"score_func\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"chi2\",\n        \"f_classif\",\n        \"mutual_info\"\n      ],\n      \"default\": \"chi2\",\n      \"probabilities\": null\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"alpha\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.01,\n      \"upper\": 0.5,\n      \"default\": 0.1\n    },\n    {\n      \"name\": \"score_func\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"chi2\",\n        \"f_classif\",\n        \"mutual_info_classif\"\n      ],\n      \"default\": \"chi2\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"mode\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"fpr\",\n        \"fdr\",\n        \"fwe\"\n      ],\n      \"default\": \"fpr\",\n      \"probabilities\": null\n    }\n  ],\n  \"conditions\": [\n    {\n      \"child\": \"mode\",\n      \"parent\": \"score_func\",\n      \"type\": \"NEQ\",\n      \"value\": \"mutual_info_classif\"\n    }\n  ],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}]}, {"name": "classifier", "components": [{"class": "sklearn.naive_bayes.BernoulliNB", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"alpha\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 0.01,\n      \"upper\": 100.0,\n      \"default\": 1.0\n    },\n    {\n      \"name\": \"fit_prior\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"True\",\n        \"False\"\n      ],\n      \"default\": \"True\",\n      \"probabilities\": null\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.tree._classes.DecisionTreeClassifier", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"criterion\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"gini\",\n        \"entropy\"\n      ],\n      \"default\": \"gini\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"max_depth_factor\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.0,\n      \"upper\": 2.0,\n      \"default\": 0.5\n    },\n    {\n      \"name\": \"max_features\",\n      \"type\": \"constant\",\n      \"value\": 1.0\n    },\n    {\n      \"name\": \"max_leaf_nodes\",\n      \"type\": \"constant\",\n      \"value\": \"None\"\n    },\n    {\n      \"name\": \"min_impurity_decrease\",\n      \"type\": \"constant\",\n      \"value\": 0.0\n    },\n    {\n      \"name\": \"min_samples_leaf\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 1,\n      \"upper\": 20,\n      \"default\": 1\n    },\n    {\n      \"name\": \"min_samples_split\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 2,\n      \"upper\": 20,\n      \"default\": 2\n    },\n    {\n      \"name\": \"min_weight_fraction_leaf\",\n      \"type\": \"constant\",\n      \"value\": 0.0\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.ensemble._forest.ExtraTreesClassifier", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"bootstrap\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"True\",\n        \"False\"\n      ],\n      \"default\": \"False\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"criterion\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"gini\",\n        \"entropy\"\n      ],\n      \"default\": \"gini\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"max_depth\",\n      \"type\": \"constant\",\n      \"value\": \"None\"\n    },\n    {\n      \"name\": \"max_features\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.0,\n      \"upper\": 1.0,\n      \"default\": 0.5\n    },\n    {\n      \"name\": \"max_leaf_nodes\",\n      \"type\": \"constant\",\n      \"value\": \"None\"\n    },\n    {\n      \"name\": \"min_impurity_decrease\",\n      \"type\": \"constant\",\n      \"value\": 0.0\n    },\n    {\n      \"name\": \"min_samples_leaf\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 1,\n      \"upper\": 20,\n      \"default\": 1\n    },\n    {\n      \"name\": \"min_samples_split\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 2,\n      \"upper\": 20,\n      \"default\": 2\n    },\n    {\n      \"name\": \"min_weight_fraction_leaf\",\n      \"type\": \"constant\",\n      \"value\": 0.0\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.naive_bayes.GaussianNB", "params": "{\n  \"hyperparameters\": [],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.ensemble._gb.GradientBoostingClassifier", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"early_stop\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"off\",\n        \"valid\",\n        \"train\"\n      ],\n      \"default\": \"off\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"l2_regularization\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-10,\n      \"upper\": 1.0,\n      \"default\": 1e-10\n    },\n    {\n      \"name\": \"learning_rate\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 0.01,\n      \"upper\": 1.0,\n      \"default\": 0.1\n    },\n    {\n      \"name\": \"loss\",\n      \"type\": \"constant\",\n      \"value\": \"auto\"\n    },\n    {\n      \"name\": \"max_bins\",\n      \"type\": \"constant\",\n      \"value\": 255\n    },\n    {\n      \"name\": \"max_depth\",\n      \"type\": \"constant\",\n      \"value\": \"None\"\n    },\n    {\n      \"name\": \"max_leaf_nodes\",\n      \"type\": \"uniform_int\",\n      \"log\": true,\n      \"lower\": 3,\n      \"upper\": 2047,\n      \"default\": 31\n    },\n    {\n      \"name\": \"min_samples_leaf\",\n      \"type\": \"uniform_int\",\n      \"log\": true,\n      \"lower\": 1,\n      \"upper\": 200,\n      \"default\": 20\n    },\n    {\n      \"name\": \"scoring\",\n      \"type\": \"constant\",\n      \"value\": \"loss\"\n    },\n    {\n      \"name\": \"tol\",\n      \"type\": \"constant\",\n      \"value\": 1e-07\n    },\n    {\n      \"name\": \"n_iter_no_change\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 1,\n      \"upper\": 20,\n      \"default\": 10\n    },\n    {\n      \"name\": \"validation_fraction\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.01,\n      \"upper\": 0.4,\n      \"default\": 0.1\n    }\n  ],\n  \"conditions\": [\n    {\n      \"child\": \"n_iter_no_change\",\n      \"parent\": \"early_stop\",\n      \"type\": \"IN\",\n      \"values\": [\n        \"valid\",\n        \"train\"\n      ]\n    },\n    {\n      \"child\": \"validation_fraction\",\n      \"parent\": \"early_stop\",\n      \"type\": \"EQ\",\n      \"value\": \"valid\"\n    }\n  ],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.neighbors._classification.KNeighborsClassifier", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"n_neighbors\",\n      \"type\": \"uniform_int\",\n      \"log\": true,\n      \"lower\": 1,\n      \"upper\": 100,\n      \"default\": 1\n    },\n    {\n      \"name\": \"p\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        1,\n        2\n      ],\n      \"default\": 2,\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"weights\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"uniform\",\n        \"distance\"\n      ],\n      \"default\": \"uniform\",\n      \"probabilities\": null\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"shrinkage\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"None\",\n        \"auto\",\n        \"manual\"\n      ],\n      \"default\": \"None\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"tol\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-05,\n      \"upper\": 0.1,\n      \"default\": 0.0001\n    },\n    {\n      \"name\": \"shrinkage_factor\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.0,\n      \"upper\": 1.0,\n      \"default\": 0.5\n    }\n  ],\n  \"conditions\": [\n    {\n      \"child\": \"shrinkage_factor\",\n      \"parent\": \"shrinkage\",\n      \"type\": \"EQ\",\n      \"value\": \"manual\"\n    }\n  ],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.svm._classes.SVC", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"C\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 0.03125,\n      \"upper\": 32768.0,\n      \"default\": 1.0\n    },\n    {\n      \"name\": \"gamma\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 3.0517578125e-05,\n      \"upper\": 8.0,\n      \"default\": 0.1\n    },\n    {\n      \"name\": \"kernel\",\n      \"type\": \"constant\",\n      \"value\": \"linear\"\n    },\n    {\n      \"name\": \"max_iter\",\n      \"type\": \"constant\",\n      \"value\": -1\n    },\n    {\n      \"name\": \"shrinking\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"True\",\n        \"False\"\n      ],\n      \"default\": \"True\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"tol\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-05,\n      \"upper\": 0.1,\n      \"default\": 0.001\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.svm._classes.SVC", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"C\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 0.03125,\n      \"upper\": 32768.0,\n      \"default\": 1.0\n    },\n    {\n      \"name\": \"gamma\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 3.0517578125e-05,\n      \"upper\": 8.0,\n      \"default\": 0.1\n    },\n    {\n      \"name\": \"kernel\",\n      \"type\": \"constant\",\n      \"value\": \"rbf\"\n    },\n    {\n      \"name\": \"max_iter\",\n      \"type\": \"constant\",\n      \"value\": -1\n    },\n    {\n      \"name\": \"shrinking\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"True\",\n        \"False\"\n      ],\n      \"default\": \"True\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"tol\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-05,\n      \"upper\": 0.1,\n      \"default\": 0.001\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.svm._classes.SVC", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"C\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 0.03125,\n      \"upper\": 32768.0,\n      \"default\": 1.0\n    },\n    {\n      \"name\": \"coef0\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": -1.0,\n      \"upper\": 1.0,\n      \"default\": 0.0\n    },\n    {\n      \"name\": \"degree\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 2,\n      \"upper\": 5,\n      \"default\": 3\n    },\n    {\n      \"name\": \"gamma\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 3.0517578125e-05,\n      \"upper\": 8.0,\n      \"default\": 0.1\n    },\n    {\n      \"name\": \"kernel\",\n      \"type\": \"constant\",\n      \"value\": \"poly\"\n    },\n    {\n      \"name\": \"max_iter\",\n      \"type\": \"constant\",\n      \"value\": -1\n    },\n    {\n      \"name\": \"shrinking\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"True\",\n        \"False\"\n      ],\n      \"default\": \"True\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"tol\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-05,\n      \"upper\": 0.1,\n      \"default\": 0.001\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.svm._classes.SVC", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"C\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 0.03125,\n      \"upper\": 32768.0,\n      \"default\": 1.0\n    },\n    {\n      \"name\": \"coef0\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": -1.0,\n      \"upper\": 1.0,\n      \"default\": 0.0\n    },\n    {\n      \"name\": \"gamma\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 3.0517578125e-05,\n      \"upper\": 8.0,\n      \"default\": 0.1\n    },\n    {\n      \"name\": \"kernel\",\n      \"type\": \"constant\",\n      \"value\": \"sigmoid\"\n    },\n    {\n      \"name\": \"max_iter\",\n      \"type\": \"constant\",\n      \"value\": -1\n    },\n    {\n      \"name\": \"shrinking\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"True\",\n        \"False\"\n      ],\n      \"default\": \"True\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"tol\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-05,\n      \"upper\": 0.1,\n      \"default\": 0.001\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.neural_network._multilayer_perceptron.MLPClassifier", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"activation\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"tanh\",\n        \"relu\"\n      ],\n      \"default\": \"relu\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"alpha\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-07,\n      \"upper\": 0.1,\n      \"default\": 0.0001\n    },\n    {\n      \"name\": \"batch_size\",\n      \"type\": \"constant\",\n      \"value\": \"auto\"\n    },\n    {\n      \"name\": \"beta_1\",\n      \"type\": \"constant\",\n      \"value\": 0.9\n    },\n    {\n      \"name\": \"beta_2\",\n      \"type\": \"constant\",\n      \"value\": 0.999\n    },\n    {\n      \"name\": \"early_stopping\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"valid\",\n        \"train\"\n      ],\n      \"default\": \"valid\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"epsilon\",\n      \"type\": \"constant\",\n      \"value\": 1e-08\n    },\n    {\n      \"name\": \"hidden_layer_depth\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 1,\n      \"upper\": 3,\n      \"default\": 1\n    },\n    {\n      \"name\": \"learning_rate_init\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 0.0001,\n      \"upper\": 0.5,\n      \"default\": 0.001\n    },\n    {\n      \"name\": \"n_iter_no_change\",\n      \"type\": \"constant\",\n      \"value\": 32\n    },\n    {\n      \"name\": \"num_nodes_per_layer\",\n      \"type\": \"uniform_int\",\n      \"log\": true,\n      \"lower\": 16,\n      \"upper\": 264,\n      \"default\": 32\n    },\n    {\n      \"name\": \"shuffle\",\n      \"type\": \"constant\",\n      \"value\": \"True\"\n    },\n    {\n      \"name\": \"solver\",\n      \"type\": \"constant\",\n      \"value\": \"adam\"\n    },\n    {\n      \"name\": \"tol\",\n      \"type\": \"constant\",\n      \"value\": 0.0001\n    },\n    {\n      \"name\": \"validation_fraction\",\n      \"type\": \"constant\",\n      \"value\": 0.1\n    }\n  ],\n  \"conditions\": [\n    {\n      \"child\": \"validation_fraction\",\n      \"parent\": \"early_stopping\",\n      \"type\": \"IN\",\n      \"values\": [\n        \"valid\"\n      ]\n    }\n  ],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.naive_bayes.MultinomialNB", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"alpha\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 0.01,\n      \"upper\": 100.0,\n      \"default\": 1.0\n    },\n    {\n      \"name\": \"fit_prior\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"True\",\n        \"False\"\n      ],\n      \"default\": \"True\",\n      \"probabilities\": null\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"C\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-05,\n      \"upper\": 10.0,\n      \"default\": 1.0\n    },\n    {\n      \"name\": \"average\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"False\",\n        \"True\"\n      ],\n      \"default\": \"False\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"fit_intercept\",\n      \"type\": \"constant\",\n      \"value\": \"True\"\n    },\n    {\n      \"name\": \"loss\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"hinge\",\n        \"squared_hinge\"\n      ],\n      \"default\": \"hinge\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"tol\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-05,\n      \"upper\": 0.1,\n      \"default\": 0.0001\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"reg_param\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.0,\n      \"upper\": 1.0,\n      \"default\": 0.0\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.ensemble._forest.RandomForestClassifier", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"bootstrap\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"True\",\n        \"False\"\n      ],\n      \"default\": \"True\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"criterion\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"gini\",\n        \"entropy\"\n      ],\n      \"default\": \"gini\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"max_depth\",\n      \"type\": \"constant\",\n      \"value\": \"None\"\n    },\n    {\n      \"name\": \"max_features\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 0.0,\n      \"upper\": 1.0,\n      \"default\": 0.5\n    },\n    {\n      \"name\": \"max_leaf_nodes\",\n      \"type\": \"constant\",\n      \"value\": \"None\"\n    },\n    {\n      \"name\": \"min_impurity_decrease\",\n      \"type\": \"constant\",\n      \"value\": 0.0\n    },\n    {\n      \"name\": \"min_samples_leaf\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 1,\n      \"upper\": 20,\n      \"default\": 1\n    },\n    {\n      \"name\": \"min_samples_split\",\n      \"type\": \"uniform_int\",\n      \"log\": false,\n      \"lower\": 2,\n      \"upper\": 20,\n      \"default\": 2\n    },\n    {\n      \"name\": \"min_weight_fraction_leaf\",\n      \"type\": \"constant\",\n      \"value\": 0.0\n    }\n  ],\n  \"conditions\": [],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}, {"class": "sklearn.linear_model._stochastic_gradient.SGDClassifier", "params": "{\n  \"hyperparameters\": [\n    {\n      \"name\": \"alpha\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-07,\n      \"upper\": 0.1,\n      \"default\": 0.0001\n    },\n    {\n      \"name\": \"average\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"False\",\n        \"True\"\n      ],\n      \"default\": \"False\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"fit_intercept\",\n      \"type\": \"constant\",\n      \"value\": \"True\"\n    },\n    {\n      \"name\": \"learning_rate\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"optimal\",\n        \"invscaling\",\n        \"constant\"\n      ],\n      \"default\": \"invscaling\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"loss\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"hinge\",\n        \"log\",\n        \"modified_huber\",\n        \"squared_hinge\",\n        \"perceptron\"\n      ],\n      \"default\": \"log\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"penalty\",\n      \"type\": \"categorical\",\n      \"choices\": [\n        \"l1\",\n        \"l2\",\n        \"elasticnet\"\n      ],\n      \"default\": \"l2\",\n      \"probabilities\": null\n    },\n    {\n      \"name\": \"tol\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-05,\n      \"upper\": 0.1,\n      \"default\": 0.0001\n    },\n    {\n      \"name\": \"epsilon\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-05,\n      \"upper\": 0.1,\n      \"default\": 0.0001\n    },\n    {\n      \"name\": \"eta0\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-07,\n      \"upper\": 0.1,\n      \"default\": 0.01\n    },\n    {\n      \"name\": \"l1_ratio\",\n      \"type\": \"uniform_float\",\n      \"log\": true,\n      \"lower\": 1e-09,\n      \"upper\": 1.0,\n      \"default\": 0.15\n    },\n    {\n      \"name\": \"power_t\",\n      \"type\": \"uniform_float\",\n      \"log\": false,\n      \"lower\": 1e-05,\n      \"upper\": 1.0,\n      \"default\": 0.5\n    }\n  ],\n  \"conditions\": [\n    {\n      \"child\": \"eta0\",\n      \"parent\": \"learning_rate\",\n      \"type\": \"IN\",\n      \"values\": [\n        \"invscaling\",\n        \"constant\"\n      ]\n    },\n    {\n      \"child\": \"power_t\",\n      \"parent\": \"learning_rate\",\n      \"type\": \"EQ\",\n      \"value\": \"invscaling\"\n    },\n    {\n      \"child\": \"epsilon\",\n      \"parent\": \"loss\",\n      \"type\": \"EQ\",\n      \"value\": \"modified_huber\"\n    },\n    {\n      \"child\": \"l1_ratio\",\n      \"parent\": \"penalty\",\n      \"type\": \"EQ\",\n      \"value\": \"elasticnet\"\n    }\n  ],\n  \"forbiddens\": [],\n  \"python_module_version\": \"0.4.19\",\n  \"json_format_version\": 0.2\n}"}]}]